// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Snapshot 1`] = `
Object {
  "Outputs": Object {
    "URL": Object {
      "Value": Object {
        "Fn::GetAtt": Array [
          "httpapiE8E4C45A",
          "ApiEndpoint",
        ],
      },
    },
  },
  "Parameters": Object {
    "AssetParametersa0a80f383d9356c32c46fb7fb9d148532e36d99defa0b726207641915a71505fArtifactHash126EEE64": Object {
      "Description": "Artifact hash for asset \\"a0a80f383d9356c32c46fb7fb9d148532e36d99defa0b726207641915a71505f\\"",
      "Type": "String",
    },
    "AssetParametersa0a80f383d9356c32c46fb7fb9d148532e36d99defa0b726207641915a71505fS3Bucket66B20A8A": Object {
      "Description": "S3 bucket for asset \\"a0a80f383d9356c32c46fb7fb9d148532e36d99defa0b726207641915a71505f\\"",
      "Type": "String",
    },
    "AssetParametersa0a80f383d9356c32c46fb7fb9d148532e36d99defa0b726207641915a71505fS3VersionKeyA2C8CB34": Object {
      "Description": "S3 key for asset version \\"a0a80f383d9356c32c46fb7fb9d148532e36d99defa0b726207641915a71505f\\"",
      "Type": "String",
    },
    "AssetParametersbda48242a55380f7e53385c85f74a0bae2bec89bda433810810cb0a67274fb16ArtifactHashA875D974": Object {
      "Description": "Artifact hash for asset \\"bda48242a55380f7e53385c85f74a0bae2bec89bda433810810cb0a67274fb16\\"",
      "Type": "String",
    },
    "AssetParametersbda48242a55380f7e53385c85f74a0bae2bec89bda433810810cb0a67274fb16S3BucketDC951C6A": Object {
      "Description": "S3 bucket for asset \\"bda48242a55380f7e53385c85f74a0bae2bec89bda433810810cb0a67274fb16\\"",
      "Type": "String",
    },
    "AssetParametersbda48242a55380f7e53385c85f74a0bae2bec89bda433810810cb0a67274fb16S3VersionKeyD0CB1218": Object {
      "Description": "S3 key for asset version \\"bda48242a55380f7e53385c85f74a0bae2bec89bda433810810cb0a67274fb16\\"",
      "Type": "String",
    },
  },
  "Resources": Object {
    "httpapiDefaultStage7AF19DCA": Object {
      "Properties": Object {
        "ApiId": Object {
          "Ref": "httpapiE8E4C45A",
        },
        "AutoDeploy": true,
        "StageName": "$default",
      },
      "Type": "AWS::ApiGatewayV2::Stage",
    },
    "httpapiE8E4C45A": Object {
      "Properties": Object {
        "Name": "http-api",
        "ProtocolType": "HTTP",
      },
      "Type": "AWS::ApiGatewayV2::Api",
    },
    "httpapiGETnotesE5E2DD57": Object {
      "Properties": Object {
        "ApiId": Object {
          "Ref": "httpapiE8E4C45A",
        },
        "AuthorizationType": "NONE",
        "RouteKey": "GET /notes",
        "Target": Object {
          "Fn::Join": Array [
            "",
            Array [
              "integrations/",
              Object {
                "Ref": "httpapiGETnotesHttpIntegration7c5b70ed607b42b659e955b79bcb80c6703A879A",
              },
            ],
          ],
        },
      },
      "Type": "AWS::ApiGatewayV2::Route",
    },
    "httpapiGETnotesHttpIntegration7c5b70ed607b42b659e955b79bcb80c6703A879A": Object {
      "Properties": Object {
        "ApiId": Object {
          "Ref": "httpapiE8E4C45A",
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": Object {
          "Fn::GetAtt": Array [
            "listnotes764F3ED0",
            "Arn",
          ],
        },
        "PayloadFormatVersion": "2.0",
      },
      "Type": "AWS::ApiGatewayV2::Integration",
    },
    "httpapiGETnotestesthttpapiGETnotesA7A17F11PermissionCBE2DB6B": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "listnotes764F3ED0",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "httpapiE8E4C45A",
              },
              "/*/*/notes",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "httpapiPOSTnotes0EE9CE61": Object {
      "Properties": Object {
        "ApiId": Object {
          "Ref": "httpapiE8E4C45A",
        },
        "AuthorizationType": "NONE",
        "RouteKey": "POST /notes",
        "Target": Object {
          "Fn::Join": Array [
            "",
            Array [
              "integrations/",
              Object {
                "Ref": "httpapiPOSTnotesHttpIntegration7f1bcad4f39a32788ee384f093c4e62a55518836",
              },
            ],
          ],
        },
      },
      "Type": "AWS::ApiGatewayV2::Route",
    },
    "httpapiPOSTnotesHttpIntegration7f1bcad4f39a32788ee384f093c4e62a55518836": Object {
      "Properties": Object {
        "ApiId": Object {
          "Ref": "httpapiE8E4C45A",
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": Object {
          "Fn::GetAtt": Array [
            "putnote0FBD4368",
            "Arn",
          ],
        },
        "PayloadFormatVersion": "2.0",
      },
      "Type": "AWS::ApiGatewayV2::Integration",
    },
    "httpapiPOSTnotestesthttpapiPOSTnotes7D543B71Permission7D419FE2": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "putnote0FBD4368",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "httpapiE8E4C45A",
              },
              "/*/*/notes",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "listnotes764F3ED0": Object {
      "DependsOn": Array [
        "listnotesServiceRoleDefaultPolicy077E627D",
        "listnotesServiceRole9069072F",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParametersbda48242a55380f7e53385c85f74a0bae2bec89bda433810810cb0a67274fb16S3BucketDC951C6A",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParametersbda48242a55380f7e53385c85f74a0bae2bec89bda433810810cb0a67274fb16S3VersionKeyD0CB1218",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParametersbda48242a55380f7e53385c85f74a0bae2bec89bda433810810cb0a67274fb16S3VersionKeyD0CB1218",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "TABLE_NAME": Object {
              "Ref": "notestable702635DB",
            },
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "listnotesServiceRole9069072F",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "listnotesServiceRole9069072F": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "listnotesServiceRoleDefaultPolicy077E627D": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "dynamodb:Scan",
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "notestable702635DB",
                    "Arn",
                  ],
                },
                Object {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "listnotesServiceRoleDefaultPolicy077E627D",
        "Roles": Array [
          Object {
            "Ref": "listnotesServiceRole9069072F",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "notestable702635DB": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "AttributeDefinitions": Array [
          Object {
            "AttributeName": "id",
            "AttributeType": "S",
          },
        ],
        "KeySchema": Array [
          Object {
            "AttributeName": "id",
            "KeyType": "HASH",
          },
        ],
        "ProvisionedThroughput": Object {
          "ReadCapacityUnits": 5,
          "WriteCapacityUnits": 5,
        },
      },
      "Type": "AWS::DynamoDB::Table",
      "UpdateReplacePolicy": "Retain",
    },
    "putnote0FBD4368": Object {
      "DependsOn": Array [
        "putnoteServiceRoleDefaultPolicyA35BFFE0",
        "putnoteServiceRole386435BA",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParametersa0a80f383d9356c32c46fb7fb9d148532e36d99defa0b726207641915a71505fS3Bucket66B20A8A",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParametersa0a80f383d9356c32c46fb7fb9d148532e36d99defa0b726207641915a71505fS3VersionKeyA2C8CB34",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParametersa0a80f383d9356c32c46fb7fb9d148532e36d99defa0b726207641915a71505fS3VersionKeyA2C8CB34",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "TABLE_NAME": Object {
              "Ref": "notestable702635DB",
            },
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "putnoteServiceRole386435BA",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "putnoteServiceRole386435BA": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "putnoteServiceRoleDefaultPolicyA35BFFE0": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "dynamodb:PutItem",
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "notestable702635DB",
                    "Arn",
                  ],
                },
                Object {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "putnoteServiceRoleDefaultPolicyA35BFFE0",
        "Roles": Array [
          Object {
            "Ref": "putnoteServiceRole386435BA",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
  },
}
`;
